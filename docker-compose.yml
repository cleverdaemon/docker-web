version: "2.1"

services:

  httpd:
    container_name: httpd
    build: ./httpd/
    ports:
      - 80:80
    volumes:
      - "${PROJECT_ROOT}:/var/www/html"
    networks:
      - server
    depends_on:
      - php

  php:
    container_name: php
    build: ./php/
    expose:
      - 9000
    volumes:
      - "${PROJECT_ROOT}:/var/www/html"
    networks:
      - database
      - server
    depends_on:
      - mysql
      - postgres
      - redis

  node:
    container_name: node
    build: ./node/
    volumes:
      - "${PROJECT_ROOT}:/var/www/html"
    depends_on:
      - httpd

  composer:
    container_name: composer
    build: ./composer/
    volumes:
      - "${PROJECT_ROOT}:/var/www/html"

  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - database
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    command: --default-authentication-plugin=mysql_native_password

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "${DB_ROOT_PASSWORD}"
      POSTGRES_DB: "${DB_USERNAME}"
      POSTGRES_USER: "${DB_USERNAME}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - database

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - 8080:80
    networks:
      - database
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 1500:80
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - "pgadmin-data:/var/lib/pgadmin"
    networks:
      - database
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis
    networks:
      - database
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    command: '--appendonly yes'

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander
    networks:
      - database
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081
    depends_on:
      - redis

  mailcatcher:
    ports:
      - 1080:1080
    networks:
      - server
    container_name: mailcatcher
    image: jeanberu/mailcatcher

volumes:
    mysql-data:
    postgres-data:
    pgadmin-data:
    redis-data:

networks:
    database:
    server:
